version: "3"

services:
  db:
    image: postgres:14-alpine3.17
    container_name: db_app
    user: postgres
    env_file:
      - ./.env
    volumes:
      - ./data/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready' ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      some_network:

  redis:
    image: redis:7.0.2-alpine
    container_name: redis_app
    command: redis-server --save 20 1 --loglevel warning
    hostname: redis
    ports:
      - "6379:6379"
    volumes:
      - ./data/cache/:/data
    healthcheck:
      test: redis-cli ping
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      some_network:

  app:
    build:
      context: .
      dockerfile: ./Dockerfile
#    network_mode: host
    networks:
      some_network:
    image: app
    container_name: app_container
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
#    depends_on:
#      - db
#      - redis
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    # command: python manage.py runserver 0.0.0.0:8000

  celery_worker:
    build:
      context: .
    container_name: "celery_worker"
#    network_mode: host
    image: app
    command: celery -A config worker -l INFO
    restart: always
    volumes:
      - .:/app
#    links:
#      - redis
    depends_on:
      - app
      - redis
    networks:
      some_network:

  celery_beat:
    build:
      context: .
    container_name: "celery_beat"
#    network_mode: host
    image: app
    command: celery -A config beat -l INFO
    restart: always
    volumes:
      - .:/app
#    links:
#      - redis
    depends_on:
      - app
      - redis
    networks:
      some_network:

  django_gunicorn:
    volumes:
      - static:/static
    env_file:
      - .env
    build:
      context: .
    ports:
      - "8000:8000"

  nginx:
    build: ./nginx
    volumes:
      - static:/static
    ports:
      - "80:80"
    depends_on:
      - django_gunicorn

networks:
  some_network:

volumes:
  static:
